name: "Code Quality"

on:
  pull_request:
    paths:
      - src
      - tests
      - composer.json
      - phpcs.xml.dist
      - phpstan.neon.dist
      - phpunit.xml.dist
  push:
    branches:
      - main
    paths:
      - src
      - tests
      - composer.json
      - phpcs.xml.dist
      - phpstan.neon.dist
      - phpunit.xml.dist

jobs:
  test:
    name: "Test on PHP ${{ matrix.php }} (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5

    strategy:
      fail-fast: false
      matrix:
        php: [ "8.1", "8.2" ]
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install php"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"

      - name: "Install dependencies"
        run: "composer install --no-interaction --no-progress"

      - name: "Execute tests"
        run: "composer test"

  format:
    name: "Format check on PHP ${{ matrix.php }} (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5

    strategy:
      fail-fast: false
      matrix:
        php: [ "8.1", "8.2" ]
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"

      - name: "Install dependencies"
        run: "composer install --no-interaction --no-progress"

      - name: "Format"
        run: "composer format"

  lint:
    name: "Lint on PHP ${{ matrix.php }} (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5

    strategy:
      fail-fast: false
      matrix:
        php: [ "8.1", "8.2" ]
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"

      - name: "Install dependencies"
        run: "composer install --no-interaction --no-progress"

      - name: "Lint"
        run: "composer lint"
